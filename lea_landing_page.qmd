---
title: "Law Enforcement Agencies"
execute: 
    echo: false
---

```{python}
import sys
from SPARQLWrapper import SPARQLWrapper, JSON

endpoint_url = "https://query.wikidata.org/sparql"

query = """
        SELECT DISTINCT ?item ?itemLabel WHERE {
            SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }
            {
                SELECT DISTINCT ?item ?itemLabel WHERE {
                ?item p:P5008 ?statement0.
                ?statement0 (ps:P5008/(wdt:P279*)) wd:Q120754096.
                ?item p:P31 ?statement1.
                ?statement1 (ps:P31/(wdt:P279*)) wd:Q732717.
                } 
            }
        }"""


def get_results(endpoint_url, query):
    user_agent = "WDQS-example Python/%s.%s" % (sys.version_info[0], sys.version_info[1])
    # TODO adjust user agent; see https://w.wiki/CX6
    sparql = SPARQLWrapper(endpoint_url, agent=user_agent)
    sparql.setQuery(query)
    sparql.setReturnFormat(JSON)
    return sparql.query().convert()


results = get_results(endpoint_url, query)

lea_data = []
for result in results["results"]["bindings"]:
    lea_data.append({'lea_name': result["itemLabel"]["value"]})
ojs_define(lea_data = lea_data)
``` 

```{ojs}
viewof lea_search = Inputs.search(lea_data, 
{placeholder: "Enter a LEA name", 
width: 1500,
label: "Search Law Enforcement Agencies"
})

viewof fe_rows = Inputs.table(lea_search, {
  columns: [
    'lea_name',
  ],
  format: {
    'lea_name': x => htl.html`<a href=${x} target=_blank>${x}</a>`,
  },
  width: {
    lea_name: 900,
  },
})
```
