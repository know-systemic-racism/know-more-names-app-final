---
title: "Fatal Encounters in California"
execute:
  echo: false
---

```{python}
# !pip install SPARQLWrapper
import sys
from SPARQLWrapper import SPARQLWrapper, JSON 

endpoint_url = "https://query.wikidata.org/sparql"

query = """SELECT ?person ?givenNameLabel ?familyNameLabel ?placeOfDeathLabel  
      WHERE
      {
        ?person wdt:P5008 wd:Q120754096.
        ?person wdt:P735 ?givenName.
        ?person wdt:P734 ?familyName.
        ?person wdt:P20 ?placeOfDeath.
        SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }
      }"""


def get_results(endpoint_url, query):
    user_agent = "WDQS-example Python/%s.%s" % (sys.version_info[0], sys.version_info[1])
    # TODO adjust user agent; see https://w.wiki/CX6
    sparql = SPARQLWrapper(endpoint_url, agent=user_agent)
    sparql.setQuery(query)
    sparql.setReturnFormat(JSON)
    return sparql.query().convert()


results = get_results(endpoint_url, query)

# for result in results["results"]["bindings"]:
#     print(result["givenNameLabel"]["value"], result["familyNameLabel"]["value"])  # print names of victims
fe_arr = []
for result in results["results"]["bindings"]:
  fe_arr.append({'full_name': result["givenNameLabel"]["value"] + ' ' + result["familyNameLabel"]["value"]})
ojs_define(fe_data = fe_arr)
```

```{ojs}
viewof fe_search = Inputs.search(fe_data, 
{placeholder: "Enter a name", 
width: 1500,
label: "Search Fatal Encounter Victims"
})

viewof fe_rows = Inputs.table(fe_search, {
  columns: [
    'full_name',
  ],
  format: {
    'full_name': x => htl.html`<a href=${x} target=_blank>${x}</a>`,
  },
  width: {
    full_name: 900,
  },
})
```
