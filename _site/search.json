[
  {
    "objectID": "policy_landing_page.html",
    "href": "policy_landing_page.html",
    "title": "Policy Terms",
    "section": "",
    "text": "viewof policy_trm_search = Inputs.search(data, \n{placeholder: \"Enter a Policy Term\", \nwidth: 1500,\nlabel: \"Search Policy Terms\"\n})\n\nviewof pol_terms_rows = Inputs.table(policy_trm_search, {\n  columns: [\n    'term',\n  ],\n  format: {\n    'term': x =&gt; htl.html`&lt;button type=\"button\" class=\"leas btn btn-sm btn-outline-secondary\"&gt;${x}&lt;/button&gt;`,\n  },\n  width: { \n    term: 900,\n  },\n})"
  },
  {
    "objectID": "lea_landing_page.html",
    "href": "lea_landing_page.html",
    "title": "Law Enforcement Agencies",
    "section": "",
    "text": "viewof lea_search = Inputs.search(lea_data, \n{placeholder: \"Enter a LEA name\", \nwidth: 1500,\nlabel: \"Search Law Enforcement Agencies\"\n})\n\nviewof fe_rows = Inputs.table(lea_search, {\n  columns: [\n    'lea_name',\n  ],\n  format: {\n    'lea_name': x =&gt; htl.html`&lt;button type=\"button\" class=\"leas\"&gt;${x}&lt;/button&gt;`,\n  },\n  width: {\n    lea_name: 900,\n  },\n//   height: { \n\n//   }\n})"
  },
  {
    "objectID": "fe_landing_page.html",
    "href": "fe_landing_page.html",
    "title": "Fatal Encounters in California",
    "section": "",
    "text": "viewof fe_search = Inputs.search(fe_data, \n{placeholder: \"Enter a name\", \nwidth: 1500,\nlabel: \"Search Fatal Encounter Victims\"\n})\nviewof fe_rows = Inputs.table(fe_search, {\n  columns: [\n    'full_name',\n  ],\n  format: {\n    'full_name': x =&gt; htl.html`&lt;button type=\"button\" class=\"leas btn btn-sm btn-outline-secondary\"&gt;${x}&lt;/button&gt;`,\n  },\n  width: {\n    full_name: 900,\n  },\n})"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Do you know about???",
    "section": "",
    "text": "{title}"
  },
  {
    "objectID": "mil_equip_landing_page.html",
    "href": "mil_equip_landing_page.html",
    "title": "Military Equipment",
    "section": "",
    "text": "viewof mil_equip_search = Inputs.search(data, \n{placeholder: \"Enter a Military Equipment Name\", \nwidth: 1500,\nlabel: \"Search Military Equipment\"\n})\n\nviewof mil_equip_rows = Inputs.table(mil_equip_search, {\n  columns: [\n    'name',\n  ],\n  format: {\n    'name': x =&gt; htl.html`&lt;button type=\"button\" class=\"leas btn btn-sm btn-outline-secondary\"&gt;${x}&lt;/button&gt;`,\n  },\n  width: { \n    name: 900,\n  },\n})"
  },
  {
    "objectID": "map_view.html",
    "href": "map_view.html",
    "title": "Map View",
    "section": "",
    "text": "Fatal Encounters"
  },
  {
    "objectID": "map_view.html#preliminary-fe-data-visualizations",
    "href": "map_view.html#preliminary-fe-data-visualizations",
    "title": "Map View",
    "section": "Preliminary FE Data Visualizations",
    "text": "Preliminary FE Data Visualizations\n\nEntire U.S.\nThe plot below visualizes the number of fatal encounters per year for all of the United States.\n\nviewof race_imputed = Inputs.radio(new Map([[\"Race with imputations\", 'raceImputed'], [\"Race with no imputations\", 'race']]), {value: 'raceImputed', label: \"Race imputed?\"})\n\n\n\n\n\n\n\nPlot.plot({\n  width: 928,\n  height: 500,\n  x: {tickFormat: \"\"},\n  y: {tickSpacing: 50},\n  color: {legend: true},\n  marks: [\n  Plot.barY(tidy_w_race, {x: 'date', y: 'count', fill: race_imputed, sort: race_imputed}),\n  ]\n})\n\n\n\n\n\n\nThe plot below visualizes the number of fatal encounters per year for all of the United States separated by state.\n\ntidy_no_race = tidy_w_race.map(d =&gt; ({date: d.date, count: d.count, state: d.state}))\n\n\n\n\n\n\n\nviewof fe_search_by_state = Inputs.checkbox(d3.group(tidy_no_race, p =&gt; p.state), {key: ['California', 'Georgia'], sort: \"ascending\", label: html`&lt;b&gt;Select 1 or more states&lt;/b&gt;`})\n\n\n\n\n\n\n\nPlot.plot({\n  width: 928,\n  height: 500,\n  x: {tickFormat: \"\"},\n  y: {tickSpacing: 50},\n  color: {legend: true},\n  marks: [\n  Plot.barY(fe_search_by_state.flat(), {x: 'date', y: 'count', fill: 'state', sort: 'state'}),\n  ]\n})\n\n\n\n\n\n\n\n\nCalifornia Only\nThe plot below visualizes the number of fatal encounters per year for California only.\nNote: the “race” column is derived from Fatal Encounter’s “Race with imputations” column\n\nca_only_tidy = ca_only.map(p =&gt; ({name: p.Name, date: new Date(p[' Date of injury resulting in death (month/day/year)']).getFullYear(), count: 1, race: p['Race with imputations'], lea: p['Agency or agencies involved']}))\n\n\n\n\n\n\n\nviewof fe_ca_search = Inputs.search(ca_only_tidy, \n{placeholder: \"Enter a name, year, race, or police department name\", \nwidth: 900,\nlabel: \"Search Fatal Encounter Dataset (CA only)\"\n})\n\n\n\n\n\n\n\nviewof fe_rows_ca = Inputs.table(fe_ca_search, \n{\n  columns: [\n    'name',\n    'date',\n    'race',\n    'lea',\n  ],\n  format: {\n    date : x =&gt; x.toFixed(0),\n    // 'Location of death (zip code)': x =&gt; x.toFixed(0),\n    // 'Supporting document link': x =&gt; htl.html`&lt;a href=${x} target=_blank&gt;${x}&lt;/a&gt;`,\n    // 'URL of image (PLS NO HOTLINKS)': x =&gt; htl.html`&lt;a href=${x} target=_blank&gt;${x}&lt;/a&gt;`\n  },\n  header: {\n    name: 'Name',\n    date: 'Date of death',\n    race: 'Race with imputations',\n    lea: 'Law Enforcement Agency/Agencies involved'\n  }\n} \n)\n\n\n\n\n\n\n\nPlot.plot({\n  width: 1000,\n  height: 600,\n  x: {tickFormat: \"\"},\n  y: {tickSpacing: 50},\n  color: {legend: true},\n  marks: [\n  Plot.barY(fe_ca_search, {x: 'date', y: 'count', fill: 'race', sort: 'race'}),\n  ]\n})"
  }
]